ModelQuery(
  find = "functions",
  where = [
    name.matches("test1_")
  ],
  model = [
    Parameters(TaintSource[Test], where=[])
  ]
)

ModelQuery(
  find = "functions",
  where = [
    name.matches("test2_")
  ],
  model = [
    Parameters(
        TaintSource[Test],
        where=[
            Not(name.matches("foo"))
        ]
    )
  ]
)


ModelQuery(
  find = "functions",
  where = [
    name.matches("test3_")
  ],
  model = [
    Parameters(
        TaintSource[Test],
        where=[
            Not(name.matches("a")),
            Not(type_annotation.equals("str"))
        ]
    )
  ]
)

ModelQuery(
  find = "functions",
  where = [
    name.matches("test4_")
  ],
  model = [
    Parameters(
        TaintSource[Test],
        where=[
            AnyOf(
                type_annotation.equals("typing.List[str]"),
                type_annotation.equals("model_query_parameters_where.C")
            )
        ]
    )
  ]
)


ModelQuery(
  find = "methods",
  where = [
    parent.matches("Test5"),
    name.matches("test5_")
  ],
  model = [
    Parameters(
        TaintSink[Test],
        where=[
            Not(name.equals("self")),
            AnyOf(
                type_annotation.matches("typing.List"),
                type_annotation.matches("C"),
                type_annotation.is_annotated_type()
            )
        ]
    )
  ]
)
